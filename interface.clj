;; gorilla-repl.fileformat = 1

;; **
;;; # Gorilla REPL
;; **

;; **
;;; Load in libraries and core functions.
;; **

;; @@
(use '[clojure repl pprint walk])
(use '[clojure.zip :as zip])
(use 'gorilla-plot.core)
(use '[gorilla-repl table html])
(use 'sym-regression-project.render :reload)
(use 'sym-regression-project.core :reload)
(use 'sym-regression-project.symbolic :reload)
(use 'sym-regression-project.algebra :reload)
(require '[clojure.java.io :as io])
(use '[clojure.core.match :only (match)])
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; Define a test function.
;; **

;; @@
(def theta (read-from-file "../../../../media/USB2/data/dis2.txt"))
(def theta-dot (read-from-file "../../../../media/USB2/data/vel2.txt"))
(def theta-double-dot (read-from-file "../../../../media/USB2/data/acc2.txt"))
(slurp "../../../../media/USB2/data/run2.txt")
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-string'>&quot;(\\&quot;theta0\\&quot;, 0.5)\\n(\\&quot;l\\&quot;, 4.9)\\n&quot;</span>","value":"\"(\\\"theta0\\\", 0.5)\\n(\\\"l\\\", 4.9)\\n\""}
;; <=

;; @@
;numerical derivatives, Note that the differentiation accuracy is currently poor, therefore use analytically derived derivatives.

;(def dfdt-coords (numerical-derivative theta domain-step))
;(def dfdt (map #(second %) dfdt-coords))

;(def dgdt-coords (numerical-derivative theta-dot domain-step))
;(def dgdt (map #(second %) dgdt-coords))

;(def first-deriv-pair (map #(list (/ %1 %2) (second %3) (second %4) (first %4)) dfdt dgdt theta theta-dot))
;(def second-deriv-pair (map #(list (/ %1 %2) (second %3) (second %4) (first %4)) dgdt dfdt theta theta-dot))

; Analytical derivatives for theta and theta-dot

(def first-deriv-pair (map #(list (pdiv (second %1) (second %2)) (second %3) (second %4) (first %4)) theta-dot theta-double-dot theta theta-dot))
(def second-deriv-pair (map #(list (pdiv (second %2) (second %1)) (second %3) (second %4) (first %4)) theta-dot theta-double-dot theta theta-dot))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/second-deriv-pair</span>","value":"#'user/second-deriv-pair"}
;; <=

;; **
;;; Program configuration.
;; **

;; @@
(defn evolve
  [population config]
  (let [{:keys [score-1a-func score-1b-func score-2-func mutation-new-tree-func tournament-size clone-n mutate-n cos-mutate-n crossover-n max-archive-size report-num max-nodes]} config
       
        generation-number (inc (:gen-num (first population)))
        generation {:gen-num generation-number}        
        popu-without-gen (if (not (nil? (:gen-num (first population)))) (drop 1 population) population)             
        previous-archive (filter #(true? (:archived %)) popu-without-gen)        
        objective-scored-popn (score-population (filter #(nil? (:archived %)) popu-without-gen) score-1a-func score-1b-func score-2-func)
        
        archive (flatten (cons previous-archive (map #(merge {:archived true} %) (flatten (into-archive should-be-archived is-dominated objective-scored-popn objective-scored-popn)))))
        
        c-archive (into () (distinct (flatten (into-archive should-be-archived is-dominated archive archive))))       
        archive-coords (distinct (map #(extract-coords %) c-archive))
        checked-archive (map #(remove-repeats c-archive %) archive-coords)
        archive-size (count checked-archive)
        thinned-archive (thinning-done thin-archive find-min-distance distance-calcs checked-archive archive-size max-archive-size)
             
  
        scored-archive (map #(strength-func % objective-scored-popn) thinned-archive)
        scored-true-popn (map #(fitness-population % scored-archive) objective-scored-popn)
        population-for-selection (flatten (cons scored-archive scored-true-popn))
        max-size (apply max (map #(count-nodes (:expr %)) population-for-selection))
        
                      
        clones  (repeatedly clone-n #(tournament-selector population-for-selection tournament-size))
        mutations (repeatedly mutate-n
                              #(mutate-expr
                                (tournament-selector population-for-selection tournament-size)
                                mutation-new-tree-func))
        crossovers (reduce into (repeatedly crossover-n
                               #(crossover-expr
                                 (tournament-selector population-for-selection tournament-size)
                                 (tournament-selector population-for-selection tournament-size))))
        
        next-generation (into clones (into mutations crossovers))    
        cos-transformed (map #(apply-cos-approx % cos-mutate-n) next-generation)]
    
     (if (= (rem generation-number report-num) 0) (println generation) ())
     
    ;(time (thinning-done thin-archive find-min-distance distance-calcs checked-archive archive-size max-archive-size))
    ;(println ave-nodes)
    ;(println stdev)
    (println max-size)
    
    (spit "data.txt" population)
    
    (cons generation (map #(limit-size % max-nodes) (into thinned-archive cos-transformed)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/evolve</span>","value":"#'user/evolve"}
;; <=

;; @@
(def config {:score-1a-func (memoize #(score-1a first-deriv-pair symbolic-derivative %))
             :score-1b-func (memoize #(score-1b second-deriv-pair symbolic-derivative %))
             :score-2-func (memoize #(score-2 count-nodes %))
             :mutation-new-tree-func #(random-full-tree functions terminals 3)
             :tournament-size 2
             :clone-n 40
             :crossover-n 25
             :mutate-n 10
             :cos-mutate-n 10
             :max-archive-size 20
             :report-num 1
             :max-nodes 80})
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/config</span>","value":"#'user/config"}
;; <=

;; @@
;; Generate an initial population (default size 100).
;(def init-pop (read-from-file "data.txt"))
(def init-pop (cons {:gen-num 1} (repeatedly 100 #(random-full-tree functions terminals 3))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/init-pop</span>","value":"#'user/init-pop"}
;; <=

;; @@
;; Run algorithm and time (default loop 20 times).
(time (def run-data (doall (take 250 (iterate #(evolve % config) init-pop)))))
;; @@
;; ->
;;; {:gen-num 2}
;;; 15
;;; {:gen-num 3}
;;; 45
;;; {:gen-num 4}
;;; 71
;;; {:gen-num 5}
;;; 71
;;; {:gen-num 6}
;;; 77
;;; {:gen-num 7}
;;; 72
;;; {:gen-num 8}
;;; 75
;;; {:gen-num 9}
;;; 77
;;; {:gen-num 10}
;;; 73
;;; {:gen-num 11}
;;; 73
;;; {:gen-num 12}
;;; 52
;;; {:gen-num 13}
;;; 30
;;; {:gen-num 14}
;;; 79
;;; {:gen-num 15}
;;; 22
;;; {:gen-num 16}
;;; 30
;;; {:gen-num 17}
;;; 33
;;; {:gen-num 18}
;;; 30
;;; {:gen-num 19}
;;; 40
;;; {:gen-num 20}
;;; 40
;;; {:gen-num 21}
;;; 45
;;; {:gen-num 22}
;;; 18
;;; {:gen-num 23}
;;; 29
;;; {:gen-num 24}
;;; 30
;;; {:gen-num 25}
;;; 23
;;; {:gen-num 26}
;;; 30
;;; {:gen-num 27}
;;; 39
;;; {:gen-num 28}
;;; 25
;;; {:gen-num 29}
;;; 53
;;; {:gen-num 30}
;;; 23
;;; {:gen-num 31}
;;; 39
;;; {:gen-num 32}
;;; 56
;;; {:gen-num 33}
;;; 56
;;; {:gen-num 34}
;;; 64
;;; {:gen-num 35}
;;; 56
;;; {:gen-num 36}
;;; 58
;;; {:gen-num 37}
;;; 67
;;; {:gen-num 38}
;;; 56
;;; {:gen-num 39}
;;; 66
;;; {:gen-num 40}
;;; 58
;;; {:gen-num 41}
;;; 62
;;; {:gen-num 42}
;;; 69
;;; {:gen-num 43}
;;; 60
;;; {:gen-num 44}
;;; 66
;;; {:gen-num 45}
;;; 77
;;; {:gen-num 46}
;;; 78
;;; {:gen-num 47}
;;; 78
;;; {:gen-num 48}
;;; 78
;;; {:gen-num 49}
;;; 77
;;; {:gen-num 50}
;;; 79
;;; {:gen-num 51}
;;; 79
;;; {:gen-num 52}
;;; 77
;;; {:gen-num 53}
;;; 77
;;; {:gen-num 54}
;;; 80
;;; {:gen-num 55}
;;; 77
;;; {:gen-num 56}
;;; 60
;;; {:gen-num 57}
;;; 58
;;; {:gen-num 58}
;;; 66
;;; {:gen-num 59}
;;; 66
;;; {:gen-num 60}
;;; 74
;;; {:gen-num 61}
;;; 60
;;; {:gen-num 62}
;;; 67
;;; {:gen-num 63}
;;; 59
;;; {:gen-num 64}
;;; 80
;;; {:gen-num 65}
;;; 68
;;; {:gen-num 66}
;;; 71
;;; {:gen-num 67}
;;; 77
;;; {:gen-num 68}
;;; 68
;;; {:gen-num 69}
;;; 60
;;; {:gen-num 70}
;;; 64
;;; {:gen-num 71}
;;; 79
;;; {:gen-num 72}
;;; 73
;;; {:gen-num 73}
;;; 73
;;; {:gen-num 74}
;;; 73
;;; {:gen-num 75}
;;; 73
;;; {:gen-num 76}
;;; 73
;;; {:gen-num 77}
;;; 56
;;; {:gen-num 78}
;;; 79
;;; {:gen-num 79}
;;; 65
;;; {:gen-num 80}
;;; 73
;;; {:gen-num 81}
;;; 80
;;; {:gen-num 82}
;;; 59
;;; {:gen-num 83}
;;; 56
;;; {:gen-num 84}
;;; 65
;;; {:gen-num 85}
;;; 59
;;; {:gen-num 86}
;;; 53
;;; {:gen-num 87}
;;; 58
;;; {:gen-num 88}
;;; 57
;;; {:gen-num 89}
;;; 51
;;; {:gen-num 90}
;;; 75
;;; {:gen-num 91}
;;; 51
;;; {:gen-num 92}
;;; 51
;;; {:gen-num 93}
;;; 51
;;; {:gen-num 94}
;;; 62
;;; {:gen-num 95}
;;; 52
;;; {:gen-num 96}
;;; 55
;;; {:gen-num 97}
;;; 51
;;; {:gen-num 98}
;;; 57
;;; {:gen-num 99}
;;; 51
;;; {:gen-num 100}
;;; 51
;;; {:gen-num 101}
;;; 60
;;; {:gen-num 102}
;;; 63
;;; {:gen-num 103}
;;; 52
;;; {:gen-num 104}
;;; 66
;;; {:gen-num 105}
;;; 54
;;; {:gen-num 106}
;;; 54
;;; {:gen-num 107}
;;; 37
;;; {:gen-num 108}
;;; 36
;;; {:gen-num 109}
;;; 35
;;; {:gen-num 110}
;;; 32
;;; {:gen-num 111}
;;; 34
;;; {:gen-num 112}
;;; 34
;;; {:gen-num 113}
;;; 31
;;; {:gen-num 114}
;;; 36
;;; {:gen-num 115}
;;; 33
;;; {:gen-num 116}
;;; 35
;;; {:gen-num 117}
;;; 32
;;; {:gen-num 118}
;;; 28
;;; {:gen-num 119}
;;; 28
;;; {:gen-num 120}
;;; 24
;;; {:gen-num 121}
;;; 33
;;; {:gen-num 122}
;;; 44
;;; {:gen-num 123}
;;; 35
;;; {:gen-num 124}
;;; 34
;;; {:gen-num 125}
;;; 43
;;; {:gen-num 126}
;;; 30
;;; {:gen-num 127}
;;; 34
;;; {:gen-num 128}
;;; 33
;;; {:gen-num 129}
;;; 28
;;; {:gen-num 130}
;;; 39
;;; {:gen-num 131}
;;; 39
;;; {:gen-num 132}
;;; 27
;;; {:gen-num 133}
;;; 28
;;; {:gen-num 134}
;;; 28
;;; {:gen-num 135}
;;; 24
;;; {:gen-num 136}
;;; 24
;;; {:gen-num 137}
;;; 27
;;; {:gen-num 138}
;;; 32
;;; {:gen-num 139}
;;; 28
;;; {:gen-num 140}
;;; 34
;;; {:gen-num 141}
;;; 46
;;; {:gen-num 142}
;;; 33
;;; {:gen-num 143}
;;; 40
;;; {:gen-num 144}
;;; 29
;;; {:gen-num 145}
;;; 33
;;; {:gen-num 146}
;;; 61
;;; {:gen-num 147}
;;; 37
;;; {:gen-num 148}
;;; 32
;;; {:gen-num 149}
;;; 43
;;; {:gen-num 150}
;;; 43
;;; {:gen-num 151}
;;; 43
;;; {:gen-num 152}
;;; 36
;;; {:gen-num 153}
;;; 40
;;; {:gen-num 154}
;;; 27
;;; {:gen-num 155}
;;; 32
;;; {:gen-num 156}
;;; 35
;;; {:gen-num 157}
;;; 35
;;; {:gen-num 158}
;;; 29
;;; {:gen-num 159}
;;; 31
;;; {:gen-num 160}
;;; 47
;;; {:gen-num 161}
;;; 35
;;; {:gen-num 162}
;;; 33
;;; {:gen-num 163}
;;; 33
;;; {:gen-num 164}
;;; 31
;;; {:gen-num 165}
;;; 34
;;; {:gen-num 166}
;;; 37
;;; {:gen-num 167}
;;; 40
;;; {:gen-num 168}
;;; 29
;;; {:gen-num 169}
;;; 30
;;; {:gen-num 170}
;;; 53
;;; {:gen-num 171}
;;; 38
;;; {:gen-num 172}
;;; 38
;;; {:gen-num 173}
;;; 32
;;; {:gen-num 174}
;;; 36
;;; {:gen-num 175}
;;; 35
;;; {:gen-num 176}
;;; 30
;;; {:gen-num 177}
;;; 29
;;; {:gen-num 178}
;;; 35
;;; {:gen-num 179}
;;; 44
;;; {:gen-num 180}
;;; 51
;;; {:gen-num 181}
;;; 44
;;; {:gen-num 182}
;;; 29
;;; {:gen-num 183}
;;; 39
;;; {:gen-num 184}
;;; 33
;;; {:gen-num 185}
;;; 27
;;; {:gen-num 186}
;;; 40
;;; {:gen-num 187}
;;; 28
;;; {:gen-num 188}
;;; 36
;;; {:gen-num 189}
;;; 25
;;; {:gen-num 190}
;;; 34
;;; {:gen-num 191}
;;; 39
;;; {:gen-num 192}
;;; 31
;;; {:gen-num 193}
;;; 27
;;; {:gen-num 194}
;;; 29
;;; {:gen-num 195}
;;; 41
;;; {:gen-num 196}
;;; 35
;;; {:gen-num 197}
;;; 33
;;; {:gen-num 198}
;;; 40
;;; {:gen-num 199}
;;; 33
;;; {:gen-num 200}
;;; 28
;;; {:gen-num 201}
;;; 34
;;; {:gen-num 202}
;;; 35
;;; {:gen-num 203}
;;; 34
;;; {:gen-num 204}
;;; 35
;;; {:gen-num 205}
;;; 32
;;; {:gen-num 206}
;;; 32
;;; {:gen-num 207}
;;; 27
;;; {:gen-num 208}
;;; 42
;;; {:gen-num 209}
;;; 42
;;; {:gen-num 210}
;;; 44
;;; {:gen-num 211}
;;; 53
;;; {:gen-num 212}
;;; 32
;;; {:gen-num 213}
;;; 35
;;; {:gen-num 214}
;;; 31
;;; {:gen-num 215}
;;; 40
;;; {:gen-num 216}
;;; 35
;;; {:gen-num 217}
;;; 35
;;; {:gen-num 218}
;;; 35
;;; {:gen-num 219}
;;; 34
;;; {:gen-num 220}
;;; 38
;;; {:gen-num 221}
;;; 35
;;; {:gen-num 222}
;;; 37
;;; {:gen-num 223}
;;; 29
;;; {:gen-num 224}
;;; 25
;;; {:gen-num 225}
;;; 31
;;; {:gen-num 226}
;;; 36
;;; {:gen-num 227}
;;; 37
;;; {:gen-num 228}
;;; 39
;;; {:gen-num 229}
;;; 43
;;; {:gen-num 230}
;;; 34
;;; {:gen-num 231}
;;; 35
;;; {:gen-num 232}
;;; 40
;;; {:gen-num 233}
;;; 38
;;; {:gen-num 234}
;;; 29
;;; {:gen-num 235}
;;; 34
;;; {:gen-num 236}
;;; 32
;;; {:gen-num 237}
;;; 34
;;; {:gen-num 238}
;;; 33
;;; {:gen-num 239}
;;; 36
;;; {:gen-num 240}
;;; 29
;;; {:gen-num 241}
;;; 26
;;; {:gen-num 242}
;;; 29
;;; {:gen-num 243}
;;; 28
;;; {:gen-num 244}
;;; 28
;;; {:gen-num 245}
;;; 32
;;; {:gen-num 246}
;;; 45
;;; {:gen-num 247}
;;; 36
;;; {:gen-num 248}
;;; 32
;;; {:gen-num 249}
;;; 32
;;; {:gen-num 250}
;;; 30
;;; &quot;Elapsed time: 159999.23291 msecs&quot;
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/run-data</span>","value":"#'user/run-data"}
;; <=

;; **
;;; Analyse results of symbolic regression.
;; **

;; @@
;; Remove generation numbers from each generation
(defn filter-out-generation-num
  [generation]
(filter #(nil? (:gen-num %)) generation))

;; Remove all archived expressions from each generation.
(defn filter-out-archive
  [generation]
  (filter #(nil? (:archived %)) generation))

(def individuals (map #(filter-out-generation-num %) run-data))
(def all-individuals (map #(filter-out-archive %) individuals))
(def final-archive (filter #(true? (:archived %)) (last individuals)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/final-archive</span>","value":"#'user/final-archive"}
;; <=

;; @@
(defn best-in-generation-1a
  [popn score-1a-func score-1b-func score-2-func]
  (apply max-key :score-1a (score-population popn score-1a-func score-1b-func score-2-func)))

(defn best-in-generation-1b
  [popn score-1a-func score-1b-func score-2-func]
  (apply max-key :score-1b (score-population popn score-1a-func score-1b-func score-2-func)))

(defn best-in-generation-2
  [popn score-1a-func score-1b-func score-2-func]
  (apply max-key :score-2 (score-population popn score-1a-func score-1b-func score-2-func)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/best-in-generation-2</span>","value":"#'user/best-in-generation-2"}
;; <=

;; @@
(def bests-1a (doall (map #(best-in-generation-1a % (:score-1a-func config)
                                                    (:score-1b-func config) 
                                                    (:score-2-func config)) all-individuals)))
(list-plot (map :score-1a bests-1a) :joined true)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"a1d7257b-96c6-483e-aafd-cadd46c4489e","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"a1d7257b-96c6-483e-aafd-cadd46c4489e","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"a1d7257b-96c6-483e-aafd-cadd46c4489e"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"a1d7257b-96c6-483e-aafd-cadd46c4489e","values":[{"x":0,"y":-40.65142806537915},{"x":1,"y":-20.87419524975121},{"x":2,"y":-14.33314694557339},{"x":3,"y":-7.401824052678421},{"x":4,"y":-14.33314694557339},{"x":5,"y":-14.33314694557339},{"x":6,"y":-14.33314694557339},{"x":7,"y":-17.622347784228623},{"x":8,"y":-17.622347784228623},{"x":9,"y":-11.033717811107635},{"x":10,"y":-3.1310110653284937},{"x":11,"y":-3.1310110653284937},{"x":12,"y":-0.285235776391346},{"x":13,"y":-0.285235776391346},{"x":14,"y":-0.285235776391346},{"x":15,"y":-0.285235776391346},{"x":16,"y":-0.285235776391346},{"x":17,"y":-0.285235776391346},{"x":18,"y":-0.285235776391346},{"x":19,"y":-0.285235776391346},{"x":20,"y":-0.285235776391346},{"x":21,"y":-0.285235776391346},{"x":22,"y":-0.285235776391346},{"x":23,"y":-0.285235776391346},{"x":24,"y":-0.285235776391346},{"x":25,"y":-0.285235776391346},{"x":26,"y":-0.285235776391346},{"x":27,"y":-0.285235776391346},{"x":28,"y":-0.285235776391346},{"x":29,"y":-0.285235776391346},{"x":30,"y":-0.285235776391346},{"x":31,"y":-0.285235776391346},{"x":32,"y":-0.285235776391346},{"x":33,"y":-0.285235776391346},{"x":34,"y":-0.285235776391346},{"x":35,"y":-0.285235776391346},{"x":36,"y":-0.285235776391346},{"x":37,"y":-0.285235776391346},{"x":38,"y":-0.285235776391346},{"x":39,"y":-0.285235776391346},{"x":40,"y":-0.285235776391346},{"x":41,"y":-0.285235776391346},{"x":42,"y":-0.285235776391346},{"x":43,"y":-0.285235776391346},{"x":44,"y":-0.285235776391346},{"x":45,"y":-0.285235776391346},{"x":46,"y":-0.285235776391346},{"x":47,"y":-0.285235776391346},{"x":48,"y":-0.285235776391346},{"x":49,"y":-0.285235776391346},{"x":50,"y":-0.285235776391346},{"x":51,"y":-0.285235776391346},{"x":52,"y":-0.285235776391346},{"x":53,"y":-0.09124298056121916},{"x":54,"y":-0.09124298056121916},{"x":55,"y":-0.09124298056121916},{"x":56,"y":-0.09124298056121916},{"x":57,"y":-0.09124298056121916},{"x":58,"y":-0.08428485799231566},{"x":59,"y":-0.08428485799231566},{"x":60,"y":-0.08428485799231566},{"x":61,"y":-0.08881223887146916},{"x":62,"y":-0.09124298056121916},{"x":63,"y":-0.08881223887146916},{"x":64,"y":-0.09124298056121916},{"x":65,"y":-0.08881223887146916},{"x":66,"y":-0.08881223887146916},{"x":67,"y":-0.09124298056121916},{"x":68,"y":-0.08881223887146916},{"x":69,"y":-0.08881223887146916},{"x":70,"y":-0.08881223887146916},{"x":71,"y":-0.08551947136584204},{"x":72,"y":-0.08551947136584204},{"x":73,"y":-0.08551947136584204},{"x":74,"y":-0.00426793423412164},{"x":75,"y":-0.00426793423412164},{"x":76,"y":-0.00426793423412164},{"x":77,"y":-0.00426793423412164},{"x":78,"y":-0.00426793423412164},{"x":79,"y":-0.00426793423412164},{"x":80,"y":-0.00426793423412164},{"x":81,"y":-0.00426793423412164},{"x":82,"y":-0.00426793423412164},{"x":83,"y":-0.00426793423412164},{"x":84,"y":-0.00426793423412164},{"x":85,"y":-0.00426793423412164},{"x":86,"y":-0.005865923076271429},{"x":87,"y":-0.00426793423412164},{"x":88,"y":-0.00426793423412164},{"x":89,"y":-0.00426793423412164},{"x":90,"y":-0.00426793423412164},{"x":91,"y":-0.00426793423412164},{"x":92,"y":-0.00426793423412164},{"x":93,"y":-0.00426793423412164},{"x":94,"y":-0.00426793423412164},{"x":95,"y":-0.00426793423412164},{"x":96,"y":-0.005865923076271429},{"x":97,"y":-0.005865923076271429},{"x":98,"y":-0.00426793423412164},{"x":99,"y":-0.00426793423412164},{"x":100,"y":-0.00426793423412164},{"x":101,"y":-0.005865923076271429},{"x":102,"y":-0.005865923076271429},{"x":103,"y":-0.005865923076271429},{"x":104,"y":-0.005865923076271429},{"x":105,"y":-0.0011661145479138213},{"x":106,"y":-0.0011661145479138213},{"x":107,"y":-0.0011661145479138213},{"x":108,"y":-0.0011661145479138213},{"x":109,"y":-0.285235776391346},{"x":110,"y":-0.0011661145479138213},{"x":111,"y":-0.0011661145479138213},{"x":112,"y":-0.285235776391346},{"x":113,"y":-0.285235776391346},{"x":114,"y":-0.0011661145479138213},{"x":115,"y":-0.0011661145479138213},{"x":116,"y":-0.0011661145479138213},{"x":117,"y":-0.0011661145479138213},{"x":118,"y":-0.0011661145479138213},{"x":119,"y":-0.0011661145479138213},{"x":120,"y":-0.0011661145479138213},{"x":121,"y":-0.0011661145479138213},{"x":122,"y":-0.285235776391346},{"x":123,"y":-0.285235776391346},{"x":124,"y":-0.0011661145479138213},{"x":125,"y":-0.285235776391346},{"x":126,"y":-0.0011661145479138213},{"x":127,"y":-0.0011661145479138213},{"x":128,"y":-0.0011661145479138213},{"x":129,"y":-0.0011661145479138213},{"x":130,"y":-0.0011661145479138213},{"x":131,"y":-0.0011661145479138213},{"x":132,"y":-0.0011661145479138213},{"x":133,"y":-0.285235776391346},{"x":134,"y":-0.26882288354681805},{"x":135,"y":-0.0011661145479138213},{"x":136,"y":-0.285235776391346},{"x":137,"y":-0.0011661145479138213},{"x":138,"y":-0.0011661145479138213},{"x":139,"y":-0.0011661145479138213},{"x":140,"y":-0.0011661145479138213},{"x":141,"y":-0.0011661145479138213},{"x":142,"y":-0.0011661145479138213},{"x":143,"y":-0.0011661145479138213},{"x":144,"y":-0.0011661145479138213},{"x":145,"y":-0.0011661145479138213},{"x":146,"y":-0.0011661145479138213},{"x":147,"y":-0.0011661145479138213},{"x":148,"y":-0.0011661145479138213},{"x":149,"y":-0.0011661145479138213},{"x":150,"y":-0.0011661145479138213},{"x":151,"y":-0.0011661145479138213},{"x":152,"y":-0.0011661145479138213},{"x":153,"y":-0.0011661145479138213},{"x":154,"y":-0.0011661145479138213},{"x":155,"y":-0.0011661145479138213},{"x":156,"y":-0.0011661145479138213},{"x":157,"y":-0.0011661145479138213},{"x":158,"y":-0.0011661145479138213},{"x":159,"y":-0.0011661145479138213},{"x":160,"y":-0.0011661145479138213},{"x":161,"y":-0.0011661145479138213},{"x":162,"y":-0.0011661145479138213},{"x":163,"y":-0.0011661145479138213},{"x":164,"y":-0.0011661145479138213},{"x":165,"y":-0.0011661145479138213},{"x":166,"y":-0.0011661145479138213},{"x":167,"y":-0.0011661145479138213},{"x":168,"y":-0.0011661145479138213},{"x":169,"y":-0.0011661145479138213},{"x":170,"y":-0.0011661145479138213},{"x":171,"y":-0.0011661145479138213},{"x":172,"y":-0.0011661145479138213},{"x":173,"y":-0.0011661145479138213},{"x":174,"y":-0.0011661145479138213},{"x":175,"y":-0.0011661145479138213},{"x":176,"y":-0.0011661145479138213},{"x":177,"y":-0.0011661145479138213},{"x":178,"y":-0.0011661145479138213},{"x":179,"y":-0.0011661145479138213},{"x":180,"y":-0.0011661145479138213},{"x":181,"y":-0.0011661145479138213},{"x":182,"y":-0.0011661145479138213},{"x":183,"y":-0.0011661145479138213},{"x":184,"y":-0.0011661145479138213},{"x":185,"y":-0.0011661145479138213},{"x":186,"y":-0.0011661145479138213},{"x":187,"y":-0.0011661145479138213},{"x":188,"y":-0.0011661145479138213},{"x":189,"y":-0.0011661145479138213},{"x":190,"y":-0.0011661145479138213},{"x":191,"y":-0.0011661145479138213},{"x":192,"y":-0.0011661145479138213},{"x":193,"y":-0.0011661145479138213},{"x":194,"y":-0.0011661145479138213},{"x":195,"y":-0.0011661145479138213},{"x":196,"y":-0.0011661145479138213},{"x":197,"y":-0.285235776391346},{"x":198,"y":-0.0011661145479138213},{"x":199,"y":-0.0011661145479138213},{"x":200,"y":-0.0011661145479138213},{"x":201,"y":-0.0011661145479138213},{"x":202,"y":-0.0011661145479138213},{"x":203,"y":-0.0011661145479138213},{"x":204,"y":-0.0011661145479138213},{"x":205,"y":-0.0011661145479138213},{"x":206,"y":-0.09404064621776342},{"x":207,"y":-0.0011661145479138213},{"x":208,"y":-0.0011661145479138213},{"x":209,"y":-0.0011661145479138213},{"x":210,"y":-0.0011661145479138213},{"x":211,"y":-0.0011661145479138213},{"x":212,"y":-0.0011661145479138213},{"x":213,"y":-0.0011661145479138213},{"x":214,"y":-0.0011661145479138213},{"x":215,"y":-0.0011661145479138213},{"x":216,"y":-0.0011661145479138213},{"x":217,"y":-0.0011661145479138213},{"x":218,"y":-0.0011661145479138213},{"x":219,"y":-0.0011661145479138213},{"x":220,"y":-0.0011661145479138213},{"x":221,"y":-0.0011661145479138213},{"x":222,"y":-0.0011661145479138213},{"x":223,"y":-0.0011661145479138213},{"x":224,"y":-0.0011661145479138213},{"x":225,"y":-0.0011661145479138213},{"x":226,"y":-0.0011661145479138213},{"x":227,"y":-0.0011661145479138213},{"x":228,"y":-0.0011661145479138213},{"x":229,"y":-0.0011661145479138213},{"x":230,"y":-0.0011661145479138213},{"x":231,"y":-0.0011661145479138213},{"x":232,"y":-0.0011661145479138213},{"x":233,"y":-0.0011661145479138213},{"x":234,"y":-0.0011661145479138213},{"x":235,"y":-0.0011661145479138213},{"x":236,"y":-0.0011661145479138213},{"x":237,"y":-0.0011661145479138213},{"x":238,"y":-0.0011661145479138213},{"x":239,"y":-0.0011661145479138213},{"x":240,"y":-0.0011661145479138213},{"x":241,"y":-0.0011661145479138213},{"x":242,"y":-0.0011661145479138213},{"x":243,"y":-0.0011661145479138213},{"x":244,"y":-0.0011661145479138213},{"x":245,"y":-0.0011661145479138213},{"x":246,"y":-0.0011661145479138213},{"x":247,"y":-0.0011661145479138213},{"x":248,"y":-0.0011661145479138213},{"x":249,"y":-0.0011661145479138213}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"a1d7257b-96c6-483e-aafd-cadd46c4489e\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"a1d7257b-96c6-483e-aafd-cadd46c4489e\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"a1d7257b-96c6-483e-aafd-cadd46c4489e\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"a1d7257b-96c6-483e-aafd-cadd46c4489e\", :values ({:x 0, :y -40.65142806537915} {:x 1, :y -20.87419524975121} {:x 2, :y -14.33314694557339} {:x 3, :y -7.401824052678421} {:x 4, :y -14.33314694557339} {:x 5, :y -14.33314694557339} {:x 6, :y -14.33314694557339} {:x 7, :y -17.622347784228623} {:x 8, :y -17.622347784228623} {:x 9, :y -11.033717811107635} {:x 10, :y -3.1310110653284937} {:x 11, :y -3.1310110653284937} {:x 12, :y -0.285235776391346} {:x 13, :y -0.285235776391346} {:x 14, :y -0.285235776391346} {:x 15, :y -0.285235776391346} {:x 16, :y -0.285235776391346} {:x 17, :y -0.285235776391346} {:x 18, :y -0.285235776391346} {:x 19, :y -0.285235776391346} {:x 20, :y -0.285235776391346} {:x 21, :y -0.285235776391346} {:x 22, :y -0.285235776391346} {:x 23, :y -0.285235776391346} {:x 24, :y -0.285235776391346} {:x 25, :y -0.285235776391346} {:x 26, :y -0.285235776391346} {:x 27, :y -0.285235776391346} {:x 28, :y -0.285235776391346} {:x 29, :y -0.285235776391346} {:x 30, :y -0.285235776391346} {:x 31, :y -0.285235776391346} {:x 32, :y -0.285235776391346} {:x 33, :y -0.285235776391346} {:x 34, :y -0.285235776391346} {:x 35, :y -0.285235776391346} {:x 36, :y -0.285235776391346} {:x 37, :y -0.285235776391346} {:x 38, :y -0.285235776391346} {:x 39, :y -0.285235776391346} {:x 40, :y -0.285235776391346} {:x 41, :y -0.285235776391346} {:x 42, :y -0.285235776391346} {:x 43, :y -0.285235776391346} {:x 44, :y -0.285235776391346} {:x 45, :y -0.285235776391346} {:x 46, :y -0.285235776391346} {:x 47, :y -0.285235776391346} {:x 48, :y -0.285235776391346} {:x 49, :y -0.285235776391346} {:x 50, :y -0.285235776391346} {:x 51, :y -0.285235776391346} {:x 52, :y -0.285235776391346} {:x 53, :y -0.09124298056121916} {:x 54, :y -0.09124298056121916} {:x 55, :y -0.09124298056121916} {:x 56, :y -0.09124298056121916} {:x 57, :y -0.09124298056121916} {:x 58, :y -0.08428485799231566} {:x 59, :y -0.08428485799231566} {:x 60, :y -0.08428485799231566} {:x 61, :y -0.08881223887146916} {:x 62, :y -0.09124298056121916} {:x 63, :y -0.08881223887146916} {:x 64, :y -0.09124298056121916} {:x 65, :y -0.08881223887146916} {:x 66, :y -0.08881223887146916} {:x 67, :y -0.09124298056121916} {:x 68, :y -0.08881223887146916} {:x 69, :y -0.08881223887146916} {:x 70, :y -0.08881223887146916} {:x 71, :y -0.08551947136584204} {:x 72, :y -0.08551947136584204} {:x 73, :y -0.08551947136584204} {:x 74, :y -0.00426793423412164} {:x 75, :y -0.00426793423412164} {:x 76, :y -0.00426793423412164} {:x 77, :y -0.00426793423412164} {:x 78, :y -0.00426793423412164} {:x 79, :y -0.00426793423412164} {:x 80, :y -0.00426793423412164} {:x 81, :y -0.00426793423412164} {:x 82, :y -0.00426793423412164} {:x 83, :y -0.00426793423412164} {:x 84, :y -0.00426793423412164} {:x 85, :y -0.00426793423412164} {:x 86, :y -0.005865923076271429} {:x 87, :y -0.00426793423412164} {:x 88, :y -0.00426793423412164} {:x 89, :y -0.00426793423412164} {:x 90, :y -0.00426793423412164} {:x 91, :y -0.00426793423412164} {:x 92, :y -0.00426793423412164} {:x 93, :y -0.00426793423412164} {:x 94, :y -0.00426793423412164} {:x 95, :y -0.00426793423412164} {:x 96, :y -0.005865923076271429} {:x 97, :y -0.005865923076271429} {:x 98, :y -0.00426793423412164} {:x 99, :y -0.00426793423412164} {:x 100, :y -0.00426793423412164} {:x 101, :y -0.005865923076271429} {:x 102, :y -0.005865923076271429} {:x 103, :y -0.005865923076271429} {:x 104, :y -0.005865923076271429} {:x 105, :y -0.0011661145479138213} {:x 106, :y -0.0011661145479138213} {:x 107, :y -0.0011661145479138213} {:x 108, :y -0.0011661145479138213} {:x 109, :y -0.285235776391346} {:x 110, :y -0.0011661145479138213} {:x 111, :y -0.0011661145479138213} {:x 112, :y -0.285235776391346} {:x 113, :y -0.285235776391346} {:x 114, :y -0.0011661145479138213} {:x 115, :y -0.0011661145479138213} {:x 116, :y -0.0011661145479138213} {:x 117, :y -0.0011661145479138213} {:x 118, :y -0.0011661145479138213} {:x 119, :y -0.0011661145479138213} {:x 120, :y -0.0011661145479138213} {:x 121, :y -0.0011661145479138213} {:x 122, :y -0.285235776391346} {:x 123, :y -0.285235776391346} {:x 124, :y -0.0011661145479138213} {:x 125, :y -0.285235776391346} {:x 126, :y -0.0011661145479138213} {:x 127, :y -0.0011661145479138213} {:x 128, :y -0.0011661145479138213} {:x 129, :y -0.0011661145479138213} {:x 130, :y -0.0011661145479138213} {:x 131, :y -0.0011661145479138213} {:x 132, :y -0.0011661145479138213} {:x 133, :y -0.285235776391346} {:x 134, :y -0.26882288354681805} {:x 135, :y -0.0011661145479138213} {:x 136, :y -0.285235776391346} {:x 137, :y -0.0011661145479138213} {:x 138, :y -0.0011661145479138213} {:x 139, :y -0.0011661145479138213} {:x 140, :y -0.0011661145479138213} {:x 141, :y -0.0011661145479138213} {:x 142, :y -0.0011661145479138213} {:x 143, :y -0.0011661145479138213} {:x 144, :y -0.0011661145479138213} {:x 145, :y -0.0011661145479138213} {:x 146, :y -0.0011661145479138213} {:x 147, :y -0.0011661145479138213} {:x 148, :y -0.0011661145479138213} {:x 149, :y -0.0011661145479138213} {:x 150, :y -0.0011661145479138213} {:x 151, :y -0.0011661145479138213} {:x 152, :y -0.0011661145479138213} {:x 153, :y -0.0011661145479138213} {:x 154, :y -0.0011661145479138213} {:x 155, :y -0.0011661145479138213} {:x 156, :y -0.0011661145479138213} {:x 157, :y -0.0011661145479138213} {:x 158, :y -0.0011661145479138213} {:x 159, :y -0.0011661145479138213} {:x 160, :y -0.0011661145479138213} {:x 161, :y -0.0011661145479138213} {:x 162, :y -0.0011661145479138213} {:x 163, :y -0.0011661145479138213} {:x 164, :y -0.0011661145479138213} {:x 165, :y -0.0011661145479138213} {:x 166, :y -0.0011661145479138213} {:x 167, :y -0.0011661145479138213} {:x 168, :y -0.0011661145479138213} {:x 169, :y -0.0011661145479138213} {:x 170, :y -0.0011661145479138213} {:x 171, :y -0.0011661145479138213} {:x 172, :y -0.0011661145479138213} {:x 173, :y -0.0011661145479138213} {:x 174, :y -0.0011661145479138213} {:x 175, :y -0.0011661145479138213} {:x 176, :y -0.0011661145479138213} {:x 177, :y -0.0011661145479138213} {:x 178, :y -0.0011661145479138213} {:x 179, :y -0.0011661145479138213} {:x 180, :y -0.0011661145479138213} {:x 181, :y -0.0011661145479138213} {:x 182, :y -0.0011661145479138213} {:x 183, :y -0.0011661145479138213} {:x 184, :y -0.0011661145479138213} {:x 185, :y -0.0011661145479138213} {:x 186, :y -0.0011661145479138213} {:x 187, :y -0.0011661145479138213} {:x 188, :y -0.0011661145479138213} {:x 189, :y -0.0011661145479138213} {:x 190, :y -0.0011661145479138213} {:x 191, :y -0.0011661145479138213} {:x 192, :y -0.0011661145479138213} {:x 193, :y -0.0011661145479138213} {:x 194, :y -0.0011661145479138213} {:x 195, :y -0.0011661145479138213} {:x 196, :y -0.0011661145479138213} {:x 197, :y -0.285235776391346} {:x 198, :y -0.0011661145479138213} {:x 199, :y -0.0011661145479138213} {:x 200, :y -0.0011661145479138213} {:x 201, :y -0.0011661145479138213} {:x 202, :y -0.0011661145479138213} {:x 203, :y -0.0011661145479138213} {:x 204, :y -0.0011661145479138213} {:x 205, :y -0.0011661145479138213} {:x 206, :y -0.09404064621776342} {:x 207, :y -0.0011661145479138213} {:x 208, :y -0.0011661145479138213} {:x 209, :y -0.0011661145479138213} {:x 210, :y -0.0011661145479138213} {:x 211, :y -0.0011661145479138213} {:x 212, :y -0.0011661145479138213} {:x 213, :y -0.0011661145479138213} {:x 214, :y -0.0011661145479138213} {:x 215, :y -0.0011661145479138213} {:x 216, :y -0.0011661145479138213} {:x 217, :y -0.0011661145479138213} {:x 218, :y -0.0011661145479138213} {:x 219, :y -0.0011661145479138213} {:x 220, :y -0.0011661145479138213} {:x 221, :y -0.0011661145479138213} {:x 222, :y -0.0011661145479138213} {:x 223, :y -0.0011661145479138213} {:x 224, :y -0.0011661145479138213} {:x 225, :y -0.0011661145479138213} {:x 226, :y -0.0011661145479138213} {:x 227, :y -0.0011661145479138213} {:x 228, :y -0.0011661145479138213} {:x 229, :y -0.0011661145479138213} {:x 230, :y -0.0011661145479138213} {:x 231, :y -0.0011661145479138213} {:x 232, :y -0.0011661145479138213} {:x 233, :y -0.0011661145479138213} {:x 234, :y -0.0011661145479138213} {:x 235, :y -0.0011661145479138213} {:x 236, :y -0.0011661145479138213} {:x 237, :y -0.0011661145479138213} {:x 238, :y -0.0011661145479138213} {:x 239, :y -0.0011661145479138213} {:x 240, :y -0.0011661145479138213} {:x 241, :y -0.0011661145479138213} {:x 242, :y -0.0011661145479138213} {:x 243, :y -0.0011661145479138213} {:x 244, :y -0.0011661145479138213} {:x 245, :y -0.0011661145479138213} {:x 246, :y -0.0011661145479138213} {:x 247, :y -0.0011661145479138213} {:x 248, :y -0.0011661145479138213} {:x 249, :y -0.0011661145479138213})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; @@
(def bests-1b (doall (map #(best-in-generation-1b % (:score-1a-func config)
                                                    (:score-1b-func config) 
                                                    (:score-2-func config)) all-individuals)))
(list-plot (map :score-1b bests-1b) :joined true)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"9e4e9e2e-2775-4865-9ce6-90f4327300b2","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"9e4e9e2e-2775-4865-9ce6-90f4327300b2","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"9e4e9e2e-2775-4865-9ce6-90f4327300b2"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"9e4e9e2e-2775-4865-9ce6-90f4327300b2","values":[{"x":0,"y":-34.76109066978097},{"x":1,"y":-34.76109066978097},{"x":2,"y":-65.97724350425415},{"x":3,"y":-33.09195374697447},{"x":4,"y":-34.76109066978097},{"x":5,"y":-34.76109066978097},{"x":6,"y":-34.76109066978097},{"x":7,"y":-42.49810014164541},{"x":8,"y":-42.49810014164541},{"x":9,"y":-42.49810014164541},{"x":10,"y":-10.304004239849746},{"x":11,"y":-10.304004239849746},{"x":12,"y":-9.144890192372259},{"x":13,"y":-9.144890192372259},{"x":14,"y":-9.144890192372259},{"x":15,"y":-9.144890192372259},{"x":16,"y":-9.144890192372259},{"x":17,"y":-9.144890192372259},{"x":18,"y":-9.144890192372259},{"x":19,"y":-9.019949338398874},{"x":20,"y":-9.019949338398874},{"x":21,"y":-9.019949338398874},{"x":22,"y":-9.019949338398874},{"x":23,"y":-9.019949338398874},{"x":24,"y":-9.019949338398874},{"x":25,"y":-9.058728104784677},{"x":26,"y":-9.019949338398874},{"x":27,"y":-9.019949338398874},{"x":28,"y":-9.019949338398874},{"x":29,"y":-9.019949338398874},{"x":30,"y":-9.019949338398874},{"x":31,"y":-9.019949338398874},{"x":32,"y":-9.058728104784677},{"x":33,"y":-9.016617292771116},{"x":34,"y":-9.019949338398874},{"x":35,"y":-9.016617292771116},{"x":36,"y":-9.016617292771116},{"x":37,"y":-9.019949338398874},{"x":38,"y":-9.016617292771116},{"x":39,"y":-9.016617292771116},{"x":40,"y":-9.019949338398874},{"x":41,"y":-9.016617292771116},{"x":42,"y":-9.016617292771116},{"x":43,"y":-9.016617292771116},{"x":44,"y":-9.016617292771116},{"x":45,"y":-9.016617292771116},{"x":46,"y":-9.016617292771116},{"x":47,"y":-9.016617292771116},{"x":48,"y":-9.016617292771116},{"x":49,"y":-9.016617292771116},{"x":50,"y":-9.016617292771116},{"x":51,"y":-9.016617292771116},{"x":52,"y":-9.016617292771116},{"x":53,"y":-4.211439159767906},{"x":54,"y":-4.211439159767906},{"x":55,"y":-4.211439159767906},{"x":56,"y":-4.211439159767906},{"x":57,"y":-4.211439159767906},{"x":58,"y":-4.04261295546894},{"x":59,"y":-4.04261295546894},{"x":60,"y":-4.04261295546894},{"x":61,"y":-4.152486628070619},{"x":62,"y":-4.211439159767906},{"x":63,"y":-4.152486628070619},{"x":64,"y":-3.256881012581289},{"x":65,"y":-3.256881012581289},{"x":66,"y":-3.256881012581289},{"x":67,"y":-3.256881012581289},{"x":68,"y":-2.866606227122247},{"x":69,"y":-3.2054698951542377},{"x":70,"y":-3.2054698951542377},{"x":71,"y":-2.866606227122247},{"x":72,"y":-3.0236890679225326},{"x":73,"y":-3.218179109506309},{"x":74,"y":-2.1253035682893824},{"x":75,"y":-2.1253035682893824},{"x":76,"y":-2.1253035682893824},{"x":77,"y":-2.1253035682893824},{"x":78,"y":-2.1253035682893824},{"x":79,"y":-2.1253035682893824},{"x":80,"y":-2.1253035682893824},{"x":81,"y":-2.1253035682893824},{"x":82,"y":-2.1253035682893824},{"x":83,"y":-2.1253035682893824},{"x":84,"y":-2.1253035682893824},{"x":85,"y":-2.1253035682893824},{"x":86,"y":-2.1644341389840065},{"x":87,"y":-2.1253035682893824},{"x":88,"y":-2.1253035682893824},{"x":89,"y":-2.1253035682893824},{"x":90,"y":-2.1253035682893824},{"x":91,"y":-2.1253035682893824},{"x":92,"y":-2.1253035682893824},{"x":93,"y":-2.1253035682893824},{"x":94,"y":-2.1253035682893824},{"x":95,"y":-2.1253035682893824},{"x":96,"y":-2.1644341389840065},{"x":97,"y":-2.1644341389840065},{"x":98,"y":-2.1253035682893824},{"x":99,"y":-2.1253035682893824},{"x":100,"y":-2.1253035682893824},{"x":101,"y":-2.1644341389840065},{"x":102,"y":-2.1644341389840065},{"x":103,"y":-2.1644341389840065},{"x":104,"y":-2.1644341389840065},{"x":105,"y":-2.0430930952859967},{"x":106,"y":-2.0430930952859967},{"x":107,"y":-2.0430930952859967},{"x":108,"y":-2.0430930952859967},{"x":109,"y":-2.5989988883957267},{"x":110,"y":-2.0430930952859967},{"x":111,"y":-2.0430930952859967},{"x":112,"y":-2.5989988883957267},{"x":113,"y":-2.5989988883957267},{"x":114,"y":-2.0430930952859967},{"x":115,"y":-2.0430930952859967},{"x":116,"y":-2.0430930952859967},{"x":117,"y":-2.0430930952859967},{"x":118,"y":-2.0430930952859967},{"x":119,"y":-2.0430930952859967},{"x":120,"y":-2.0430930952859967},{"x":121,"y":-2.0430930952859967},{"x":122,"y":-2.5989988883957267},{"x":123,"y":-2.5989988883957267},{"x":124,"y":-2.0430930952859967},{"x":125,"y":-8.881198320072144},{"x":126,"y":-2.0430930952859967},{"x":127,"y":-2.0430930952859967},{"x":128,"y":-2.0430930952859967},{"x":129,"y":-2.0430930952859967},{"x":130,"y":-2.0430930952859967},{"x":131,"y":-2.0430930952859967},{"x":132,"y":-2.0430930952859967},{"x":133,"y":-2.5989988883957267},{"x":134,"y":-2.5989988883957267},{"x":135,"y":-2.0430930952859967},{"x":136,"y":-2.5989988883957267},{"x":137,"y":-2.0430930952859967},{"x":138,"y":-2.0430930952859967},{"x":139,"y":-2.0430930952859967},{"x":140,"y":-2.0430930952859967},{"x":141,"y":-2.0430930952859967},{"x":142,"y":-2.0430930952859967},{"x":143,"y":-2.0430930952859967},{"x":144,"y":-2.0430930952859967},{"x":145,"y":-2.0430930952859967},{"x":146,"y":-2.0430930952859967},{"x":147,"y":-2.0430930952859967},{"x":148,"y":-2.0430930952859967},{"x":149,"y":-2.0430930952859967},{"x":150,"y":-2.0430930952859967},{"x":151,"y":-2.0430930952859967},{"x":152,"y":-2.0430930952859967},{"x":153,"y":-2.0430930952859967},{"x":154,"y":-2.0430930952859967},{"x":155,"y":-2.0430930952859967},{"x":156,"y":-2.0430930952859967},{"x":157,"y":-2.0430930952859967},{"x":158,"y":-2.0430930952859967},{"x":159,"y":-2.0430930952859967},{"x":160,"y":-2.0430930952859967},{"x":161,"y":-2.0430930952859967},{"x":162,"y":-2.0430930952859967},{"x":163,"y":-2.0430930952859967},{"x":164,"y":-2.0430930952859967},{"x":165,"y":-2.0430930952859967},{"x":166,"y":-2.0430930952859967},{"x":167,"y":-2.0430930952859967},{"x":168,"y":-2.0430930952859967},{"x":169,"y":-2.0430930952859967},{"x":170,"y":-2.0430930952859967},{"x":171,"y":-2.0430930952859967},{"x":172,"y":-2.0430930952859967},{"x":173,"y":-2.0430930952859967},{"x":174,"y":-2.0430930952859967},{"x":175,"y":-2.0430930952859967},{"x":176,"y":-2.0430930952859967},{"x":177,"y":-2.0430930952859967},{"x":178,"y":-2.0430930952859967},{"x":179,"y":-2.0430930952859967},{"x":180,"y":-2.0430930952859967},{"x":181,"y":-2.0430930952859967},{"x":182,"y":-2.0430930952859967},{"x":183,"y":-2.0430930952859967},{"x":184,"y":-2.0430930952859967},{"x":185,"y":-2.0430930952859967},{"x":186,"y":-2.0430930952859967},{"x":187,"y":-2.0430930952859967},{"x":188,"y":-2.0430930952859967},{"x":189,"y":-2.0430930952859967},{"x":190,"y":-2.0430930952859967},{"x":191,"y":-2.0430930952859967},{"x":192,"y":-2.0430930952859967},{"x":193,"y":-2.0430930952859967},{"x":194,"y":-2.0430930952859967},{"x":195,"y":-2.0430930952859967},{"x":196,"y":-2.0430930952859967},{"x":197,"y":-2.5989988883957267},{"x":198,"y":-2.0430930952859967},{"x":199,"y":-2.0430930952859967},{"x":200,"y":-2.0430930952859967},{"x":201,"y":-2.0430930952859967},{"x":202,"y":-2.0430930952859967},{"x":203,"y":-2.0430930952859967},{"x":204,"y":-2.0430930952859967},{"x":205,"y":-2.0430930952859967},{"x":206,"y":-3.9117239388579037},{"x":207,"y":-2.0430930952859967},{"x":208,"y":-2.0430930952859967},{"x":209,"y":-2.0430930952859967},{"x":210,"y":-2.0430930952859967},{"x":211,"y":-2.0430930952859967},{"x":212,"y":-2.0430930952859967},{"x":213,"y":-2.0430930952859967},{"x":214,"y":-2.0430930952859967},{"x":215,"y":-2.0430930952859967},{"x":216,"y":-2.0430930952859967},{"x":217,"y":-2.0430930952859967},{"x":218,"y":-2.0430930952859967},{"x":219,"y":-2.0430930952859967},{"x":220,"y":-2.0430930952859967},{"x":221,"y":-2.0430930952859967},{"x":222,"y":-2.0430930952859967},{"x":223,"y":-2.0430930952859967},{"x":224,"y":-2.0430930952859967},{"x":225,"y":-2.0430930952859967},{"x":226,"y":-2.0430930952859967},{"x":227,"y":-2.0430930952859967},{"x":228,"y":-2.0430930952859967},{"x":229,"y":-2.0430930952859967},{"x":230,"y":-2.0430930952859967},{"x":231,"y":-2.0430930952859967},{"x":232,"y":-2.0430930952859967},{"x":233,"y":-2.0430930952859967},{"x":234,"y":-2.0430930952859967},{"x":235,"y":-2.0430930952859967},{"x":236,"y":-2.0430930952859967},{"x":237,"y":-2.0430930952859967},{"x":238,"y":-2.0430930952859967},{"x":239,"y":-2.0430930952859967},{"x":240,"y":-2.0430930952859967},{"x":241,"y":-2.0430930952859967},{"x":242,"y":-2.0430930952859967},{"x":243,"y":-2.0430930952859967},{"x":244,"y":-2.0430930952859967},{"x":245,"y":-2.0430930952859967},{"x":246,"y":-2.0430930952859967},{"x":247,"y":-2.0430930952859967},{"x":248,"y":-2.0430930952859967},{"x":249,"y":-2.0430930952859967}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"9e4e9e2e-2775-4865-9ce6-90f4327300b2\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"9e4e9e2e-2775-4865-9ce6-90f4327300b2\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"9e4e9e2e-2775-4865-9ce6-90f4327300b2\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"9e4e9e2e-2775-4865-9ce6-90f4327300b2\", :values ({:x 0, :y -34.76109066978097} {:x 1, :y -34.76109066978097} {:x 2, :y -65.97724350425415} {:x 3, :y -33.09195374697447} {:x 4, :y -34.76109066978097} {:x 5, :y -34.76109066978097} {:x 6, :y -34.76109066978097} {:x 7, :y -42.49810014164541} {:x 8, :y -42.49810014164541} {:x 9, :y -42.49810014164541} {:x 10, :y -10.304004239849746} {:x 11, :y -10.304004239849746} {:x 12, :y -9.144890192372259} {:x 13, :y -9.144890192372259} {:x 14, :y -9.144890192372259} {:x 15, :y -9.144890192372259} {:x 16, :y -9.144890192372259} {:x 17, :y -9.144890192372259} {:x 18, :y -9.144890192372259} {:x 19, :y -9.019949338398874} {:x 20, :y -9.019949338398874} {:x 21, :y -9.019949338398874} {:x 22, :y -9.019949338398874} {:x 23, :y -9.019949338398874} {:x 24, :y -9.019949338398874} {:x 25, :y -9.058728104784677} {:x 26, :y -9.019949338398874} {:x 27, :y -9.019949338398874} {:x 28, :y -9.019949338398874} {:x 29, :y -9.019949338398874} {:x 30, :y -9.019949338398874} {:x 31, :y -9.019949338398874} {:x 32, :y -9.058728104784677} {:x 33, :y -9.016617292771116} {:x 34, :y -9.019949338398874} {:x 35, :y -9.016617292771116} {:x 36, :y -9.016617292771116} {:x 37, :y -9.019949338398874} {:x 38, :y -9.016617292771116} {:x 39, :y -9.016617292771116} {:x 40, :y -9.019949338398874} {:x 41, :y -9.016617292771116} {:x 42, :y -9.016617292771116} {:x 43, :y -9.016617292771116} {:x 44, :y -9.016617292771116} {:x 45, :y -9.016617292771116} {:x 46, :y -9.016617292771116} {:x 47, :y -9.016617292771116} {:x 48, :y -9.016617292771116} {:x 49, :y -9.016617292771116} {:x 50, :y -9.016617292771116} {:x 51, :y -9.016617292771116} {:x 52, :y -9.016617292771116} {:x 53, :y -4.211439159767906} {:x 54, :y -4.211439159767906} {:x 55, :y -4.211439159767906} {:x 56, :y -4.211439159767906} {:x 57, :y -4.211439159767906} {:x 58, :y -4.04261295546894} {:x 59, :y -4.04261295546894} {:x 60, :y -4.04261295546894} {:x 61, :y -4.152486628070619} {:x 62, :y -4.211439159767906} {:x 63, :y -4.152486628070619} {:x 64, :y -3.256881012581289} {:x 65, :y -3.256881012581289} {:x 66, :y -3.256881012581289} {:x 67, :y -3.256881012581289} {:x 68, :y -2.866606227122247} {:x 69, :y -3.2054698951542377} {:x 70, :y -3.2054698951542377} {:x 71, :y -2.866606227122247} {:x 72, :y -3.0236890679225326} {:x 73, :y -3.218179109506309} {:x 74, :y -2.1253035682893824} {:x 75, :y -2.1253035682893824} {:x 76, :y -2.1253035682893824} {:x 77, :y -2.1253035682893824} {:x 78, :y -2.1253035682893824} {:x 79, :y -2.1253035682893824} {:x 80, :y -2.1253035682893824} {:x 81, :y -2.1253035682893824} {:x 82, :y -2.1253035682893824} {:x 83, :y -2.1253035682893824} {:x 84, :y -2.1253035682893824} {:x 85, :y -2.1253035682893824} {:x 86, :y -2.1644341389840065} {:x 87, :y -2.1253035682893824} {:x 88, :y -2.1253035682893824} {:x 89, :y -2.1253035682893824} {:x 90, :y -2.1253035682893824} {:x 91, :y -2.1253035682893824} {:x 92, :y -2.1253035682893824} {:x 93, :y -2.1253035682893824} {:x 94, :y -2.1253035682893824} {:x 95, :y -2.1253035682893824} {:x 96, :y -2.1644341389840065} {:x 97, :y -2.1644341389840065} {:x 98, :y -2.1253035682893824} {:x 99, :y -2.1253035682893824} {:x 100, :y -2.1253035682893824} {:x 101, :y -2.1644341389840065} {:x 102, :y -2.1644341389840065} {:x 103, :y -2.1644341389840065} {:x 104, :y -2.1644341389840065} {:x 105, :y -2.0430930952859967} {:x 106, :y -2.0430930952859967} {:x 107, :y -2.0430930952859967} {:x 108, :y -2.0430930952859967} {:x 109, :y -2.5989988883957267} {:x 110, :y -2.0430930952859967} {:x 111, :y -2.0430930952859967} {:x 112, :y -2.5989988883957267} {:x 113, :y -2.5989988883957267} {:x 114, :y -2.0430930952859967} {:x 115, :y -2.0430930952859967} {:x 116, :y -2.0430930952859967} {:x 117, :y -2.0430930952859967} {:x 118, :y -2.0430930952859967} {:x 119, :y -2.0430930952859967} {:x 120, :y -2.0430930952859967} {:x 121, :y -2.0430930952859967} {:x 122, :y -2.5989988883957267} {:x 123, :y -2.5989988883957267} {:x 124, :y -2.0430930952859967} {:x 125, :y -8.881198320072144} {:x 126, :y -2.0430930952859967} {:x 127, :y -2.0430930952859967} {:x 128, :y -2.0430930952859967} {:x 129, :y -2.0430930952859967} {:x 130, :y -2.0430930952859967} {:x 131, :y -2.0430930952859967} {:x 132, :y -2.0430930952859967} {:x 133, :y -2.5989988883957267} {:x 134, :y -2.5989988883957267} {:x 135, :y -2.0430930952859967} {:x 136, :y -2.5989988883957267} {:x 137, :y -2.0430930952859967} {:x 138, :y -2.0430930952859967} {:x 139, :y -2.0430930952859967} {:x 140, :y -2.0430930952859967} {:x 141, :y -2.0430930952859967} {:x 142, :y -2.0430930952859967} {:x 143, :y -2.0430930952859967} {:x 144, :y -2.0430930952859967} {:x 145, :y -2.0430930952859967} {:x 146, :y -2.0430930952859967} {:x 147, :y -2.0430930952859967} {:x 148, :y -2.0430930952859967} {:x 149, :y -2.0430930952859967} {:x 150, :y -2.0430930952859967} {:x 151, :y -2.0430930952859967} {:x 152, :y -2.0430930952859967} {:x 153, :y -2.0430930952859967} {:x 154, :y -2.0430930952859967} {:x 155, :y -2.0430930952859967} {:x 156, :y -2.0430930952859967} {:x 157, :y -2.0430930952859967} {:x 158, :y -2.0430930952859967} {:x 159, :y -2.0430930952859967} {:x 160, :y -2.0430930952859967} {:x 161, :y -2.0430930952859967} {:x 162, :y -2.0430930952859967} {:x 163, :y -2.0430930952859967} {:x 164, :y -2.0430930952859967} {:x 165, :y -2.0430930952859967} {:x 166, :y -2.0430930952859967} {:x 167, :y -2.0430930952859967} {:x 168, :y -2.0430930952859967} {:x 169, :y -2.0430930952859967} {:x 170, :y -2.0430930952859967} {:x 171, :y -2.0430930952859967} {:x 172, :y -2.0430930952859967} {:x 173, :y -2.0430930952859967} {:x 174, :y -2.0430930952859967} {:x 175, :y -2.0430930952859967} {:x 176, :y -2.0430930952859967} {:x 177, :y -2.0430930952859967} {:x 178, :y -2.0430930952859967} {:x 179, :y -2.0430930952859967} {:x 180, :y -2.0430930952859967} {:x 181, :y -2.0430930952859967} {:x 182, :y -2.0430930952859967} {:x 183, :y -2.0430930952859967} {:x 184, :y -2.0430930952859967} {:x 185, :y -2.0430930952859967} {:x 186, :y -2.0430930952859967} {:x 187, :y -2.0430930952859967} {:x 188, :y -2.0430930952859967} {:x 189, :y -2.0430930952859967} {:x 190, :y -2.0430930952859967} {:x 191, :y -2.0430930952859967} {:x 192, :y -2.0430930952859967} {:x 193, :y -2.0430930952859967} {:x 194, :y -2.0430930952859967} {:x 195, :y -2.0430930952859967} {:x 196, :y -2.0430930952859967} {:x 197, :y -2.5989988883957267} {:x 198, :y -2.0430930952859967} {:x 199, :y -2.0430930952859967} {:x 200, :y -2.0430930952859967} {:x 201, :y -2.0430930952859967} {:x 202, :y -2.0430930952859967} {:x 203, :y -2.0430930952859967} {:x 204, :y -2.0430930952859967} {:x 205, :y -2.0430930952859967} {:x 206, :y -3.9117239388579037} {:x 207, :y -2.0430930952859967} {:x 208, :y -2.0430930952859967} {:x 209, :y -2.0430930952859967} {:x 210, :y -2.0430930952859967} {:x 211, :y -2.0430930952859967} {:x 212, :y -2.0430930952859967} {:x 213, :y -2.0430930952859967} {:x 214, :y -2.0430930952859967} {:x 215, :y -2.0430930952859967} {:x 216, :y -2.0430930952859967} {:x 217, :y -2.0430930952859967} {:x 218, :y -2.0430930952859967} {:x 219, :y -2.0430930952859967} {:x 220, :y -2.0430930952859967} {:x 221, :y -2.0430930952859967} {:x 222, :y -2.0430930952859967} {:x 223, :y -2.0430930952859967} {:x 224, :y -2.0430930952859967} {:x 225, :y -2.0430930952859967} {:x 226, :y -2.0430930952859967} {:x 227, :y -2.0430930952859967} {:x 228, :y -2.0430930952859967} {:x 229, :y -2.0430930952859967} {:x 230, :y -2.0430930952859967} {:x 231, :y -2.0430930952859967} {:x 232, :y -2.0430930952859967} {:x 233, :y -2.0430930952859967} {:x 234, :y -2.0430930952859967} {:x 235, :y -2.0430930952859967} {:x 236, :y -2.0430930952859967} {:x 237, :y -2.0430930952859967} {:x 238, :y -2.0430930952859967} {:x 239, :y -2.0430930952859967} {:x 240, :y -2.0430930952859967} {:x 241, :y -2.0430930952859967} {:x 242, :y -2.0430930952859967} {:x 243, :y -2.0430930952859967} {:x 244, :y -2.0430930952859967} {:x 245, :y -2.0430930952859967} {:x 246, :y -2.0430930952859967} {:x 247, :y -2.0430930952859967} {:x 248, :y -2.0430930952859967} {:x 249, :y -2.0430930952859967})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; @@
;; scored-generations maps the score-population function over every generation.
(def scored-generations (doall (map #(score-population % (:score-1a-func config)
                                                         (:score-1b-func config)
                                                         (:score-2-func config)) all-individuals)))

;; final-generation outputs the scored expressions from the very last iteration.
(def final-generation (last scored-generations))

;; scored-individuals returns a sequence of every scored individual.
(def scored-individuals (flatten scored-generations))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/scored-individuals</span>","value":"#'user/scored-individuals"}
;; <=

;; @@
(def unarchived (map #(merge % {:archived false}) final-archive))

(def pareto-front-gen (map #(merge % {:archived false}) (into () (set (flatten (into-archive should-be-archived is-dominated final-generation final-generation))))))

(def test-archive (flatten (cons pareto-front-individuals unarchived)))

(def pareto-front-individuals (distinct (into () (set (flatten (into-archive should-be-archived is-dominated unarchived pareto-front-gen))))))

;; Apply extract-coords to every individual.
(def points (map #(extract-coords %) scored-individuals))

;; Generate a set of coordinates for every individual from the final generation that lies on the 3d Pareto front.
(def pareto-front-points (distinct (map #(extract-coords %) pareto-front-individuals)))

;; extract individuals from pareto-front-points that belong on the score-1a 2d pareto front.
(def pareto-front-individuals-1a (distinct (into () (set (flatten (into-archive should-be-archived is-dominated-1a test-archive test-archive))))))
(def pareto-front-points-1a (distinct (map #(extract-coords %) pareto-front-individuals-1a)))

;;extract individuals from pareto-front-points that belong on the score-1b 2d pareto front.
(def pareto-front-individuals-1b (distinct (into () (set (flatten (into-archive should-be-archived is-dominated-1b test-archive test-archive))))))
(def pareto-front-points-1b (distinct (map #(extract-coords %) pareto-front-individuals-1b)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/pareto-front-points-1b</span>","value":"#'user/pareto-front-points-1b"}
;; <=

;; @@
;; Generate a graph showing the individual from the final generation that has the highest score-1a value.
;(compose
 ;(list-plot data)
; (plot (functionalise-theta (:expr (apply max-key :score-1a pareto-front-individuals))) [0 15]))
;; @@

;; @@
(list-plot (map #(drop-last %) pareto-front-points-1a))
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"6727128a-bb8d-402b-bc92-636072fbe663","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"6727128a-bb8d-402b-bc92-636072fbe663","field":"data.y"}}],"marks":[{"type":"symbol","from":{"data":"6727128a-bb8d-402b-bc92-636072fbe663"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}],"data":[{"name":"6727128a-bb8d-402b-bc92-636072fbe663","values":[{"x":-4,"y":-40.60631820833078},{"x":-11,"y":-0.285235776391346},{"x":-2,"y":-42.75309469457716},{"x":-6,"y":-3.1310110653284937},{"x":-1,"y":-54.07063706219196},{"x":-1,"y":-54.07063706219196},{"x":-22,"y":-0.0011661145479138213},{"x":-7,"y":-2.672181171597913},{"x":-10,"y":-2.3448937778011896}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"6727128a-bb8d-402b-bc92-636072fbe663\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"6727128a-bb8d-402b-bc92-636072fbe663\", :field \"data.y\"}}], :marks [{:type \"symbol\", :from {:data \"6727128a-bb8d-402b-bc92-636072fbe663\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}}], :data [{:name \"6727128a-bb8d-402b-bc92-636072fbe663\", :values ({:x -4, :y -40.60631820833078} {:x -11, :y -0.285235776391346} {:x -2, :y -42.75309469457716} {:x -6, :y -3.1310110653284937} {:x -1, :y -54.07063706219196} {:x -1, :y -54.07063706219196} {:x -22, :y -0.0011661145479138213} {:x -7, :y -2.672181171597913} {:x -10, :y -2.3448937778011896})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; @@
(def sorted-pareto-front-individuals-1a
(sort-by (juxt :score-2 :score-1a) pareto-front-individuals-1a))    

(nth sorted-pareto-front-individuals-1a 1)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:fitness</span>","value":":fitness"},{"type":"html","content":"<span class='clj-long'>0</span>","value":"0"}],"value":"[:fitness 0]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:dominated</span>","value":":dominated"},{"type":"html","content":"<span class='clj-unkown'>false</span>","value":"false"}],"value":"[:dominated false]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-2</span>","value":":score-2"},{"type":"html","content":"<span class='clj-long'>-11</span>","value":"-11"}],"value":"[:score-2 -11]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-1b</span>","value":":score-1b"},{"type":"html","content":"<span class='clj-double'>-9.144890192372259</span>","value":"-9.144890192372259"}],"value":"[:score-1b -9.144890192372259]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-1a</span>","value":":score-1a"},{"type":"html","content":"<span class='clj-double'>-0.285235776391346</span>","value":"-0.285235776391346"}],"value":"[:score-1a -0.285235776391346]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:expr</span>","value":":expr"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-double'>0.5</span>","value":"0.5"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-symbol'>theta-dot</span>","value":"theta-dot"},{"type":"html","content":"<span class='clj-symbol'>theta-dot</span>","value":"theta-dot"}],"value":"(* theta-dot theta-dot)"}],"value":"(* 0.5 (* theta-dot theta-dot))"}],"value":"(- 1 (* 0.5 (* theta-dot theta-dot)))"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"}],"value":"(* theta theta)"}],"value":"(- (- 1 (* 0.5 (* theta-dot theta-dot))) (* theta theta))"}],"value":"[:expr (- (- 1 (* 0.5 (* theta-dot theta-dot))) (* theta theta))]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:archived</span>","value":":archived"},{"type":"html","content":"<span class='clj-unkown'>false</span>","value":"false"}],"value":"[:archived false]"}],"value":"{:fitness 0, :dominated false, :score-2 -11, :score-1b -9.144890192372259, :score-1a -0.285235776391346, :expr (- (- 1 (* 0.5 (* theta-dot theta-dot))) (* theta theta)), :archived false}"}
;; <=

;; @@
(list-plot (map #(list (first %) (last %)) pareto-front-points-1b))
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"16b45448-2509-4c31-a41f-929ec16259ca","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"16b45448-2509-4c31-a41f-929ec16259ca","field":"data.y"}}],"marks":[{"type":"symbol","from":{"data":"16b45448-2509-4c31-a41f-929ec16259ca"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}],"data":[{"name":"16b45448-2509-4c31-a41f-929ec16259ca","values":[{"x":-4,"y":-88.9182835817337},{"x":-17,"y":-2.5989988883957267},{"x":-6,"y":-10.304004239849746},{"x":-1,"y":-181.32120168209076},{"x":-9,"y":-8.532985270954669},{"x":-11,"y":-5.859017327427864},{"x":-22,"y":-2.0430930952859967},{"x":-7,"y":-9.019949338398874}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"16b45448-2509-4c31-a41f-929ec16259ca\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"16b45448-2509-4c31-a41f-929ec16259ca\", :field \"data.y\"}}], :marks [{:type \"symbol\", :from {:data \"16b45448-2509-4c31-a41f-929ec16259ca\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}}], :data [{:name \"16b45448-2509-4c31-a41f-929ec16259ca\", :values ({:x -4, :y -88.9182835817337} {:x -17, :y -2.5989988883957267} {:x -6, :y -10.304004239849746} {:x -1, :y -181.32120168209076} {:x -9, :y -8.532985270954669} {:x -11, :y -5.859017327427864} {:x -22, :y -2.0430930952859967} {:x -7, :y -9.019949338398874})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; @@
(def sorted-pareto-front-individuals-1b
(sort-by (juxt :score-2 :score-1a) pareto-front-individuals-1b))

(nth sorted-pareto-front-individuals-1b 1)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:fitness</span>","value":":fitness"},{"type":"html","content":"<span class='clj-long'>0</span>","value":"0"}],"value":"[:fitness 0]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:dominated</span>","value":":dominated"},{"type":"html","content":"<span class='clj-unkown'>false</span>","value":"false"}],"value":"[:dominated false]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-2</span>","value":":score-2"},{"type":"html","content":"<span class='clj-long'>-17</span>","value":"-17"}],"value":"[:score-2 -17]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-1b</span>","value":":score-1b"},{"type":"html","content":"<span class='clj-double'>-2.5989988883957267</span>","value":"-2.5989988883957267"}],"value":"[:score-1b -2.5989988883957267]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:score-1a</span>","value":":score-1a"},{"type":"html","content":"<span class='clj-double'>-1.4298429494649554</span>","value":"-1.4298429494649554"}],"value":"[:score-1a -1.4298429494649554]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:expr</span>","value":":expr"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>Math/cos</span>","value":"Math/cos"},{"type":"html","content":"<span class='clj-symbol'>theta-dot</span>","value":"theta-dot"}],"value":"(Math/cos theta-dot)"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"}],"value":"(* theta theta)"}],"value":"(- (Math/cos theta-dot) (* theta theta))"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-double'>0.5</span>","value":"0.5"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-symbol'>theta-dot</span>","value":"theta-dot"},{"type":"html","content":"<span class='clj-symbol'>theta-dot</span>","value":"theta-dot"}],"value":"(* theta-dot theta-dot)"}],"value":"(* 0.5 (* theta-dot theta-dot))"}],"value":"(- (- (Math/cos theta-dot) (* theta theta)) (* 0.5 (* theta-dot theta-dot)))"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>Math/sin</span>","value":"Math/sin"},{"type":"html","content":"<span class='clj-symbol'>theta</span>","value":"theta"}],"value":"(Math/sin theta)"}],"value":"(* theta (Math/sin theta))"}],"value":"(- (- (- (Math/cos theta-dot) (* theta theta)) (* 0.5 (* theta-dot theta-dot))) (* theta (Math/sin theta)))"}],"value":"[:expr (- (- (- (Math/cos theta-dot) (* theta theta)) (* 0.5 (* theta-dot theta-dot))) (* theta (Math/sin theta)))]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:archived</span>","value":":archived"},{"type":"html","content":"<span class='clj-unkown'>false</span>","value":"false"}],"value":"[:archived false]"}],"value":"{:fitness 0, :dominated false, :score-2 -17, :score-1b -2.5989988883957267, :score-1a -1.4298429494649554, :expr (- (- (- (Math/cos theta-dot) (* theta theta)) (* 0.5 (* theta-dot theta-dot))) (* theta (Math/sin theta))), :archived false}"}
;; <=

;; @@
;; plot expression as function of time.
(list-plot
 (let [f (functionalise-theta (:expr (nth sorted-pareto-front-individuals-1a 1)))]
    (map #(f (second %) (nth % 2)) first-deriv-pair)) :joined true)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6","values":[{"x":0,"y":0.75},{"x":1,"y":0.7533523901289974},{"x":2,"y":0.7551598868858342},{"x":3,"y":0.7548490540678546},{"x":4,"y":0.7511721234358609},{"x":5,"y":0.7510646873219909},{"x":6,"y":0.7548062344637376},{"x":7,"y":0.7551617697156543},{"x":8,"y":0.7534623766921691},{"x":9,"y":0.7500035312173666},{"x":10,"y":0.7532398382114833},{"x":11,"y":0.7551573719327201},{"x":12,"y":0.7548882563548758},{"x":13,"y":0.7512827443129481},{"x":14,"y":0.750960767464169},{"x":15,"y":0.7547597348550759},{"x":16,"y":0.7551630777232664},{"x":17,"y":0.753569507206971},{"x":18,"y":0.7500139868424425},{"x":19,"y":0.7531248442603741},{"x":20,"y":0.755154028347918},{"x":21,"y":0.7549240954774978},{"x":22,"y":0.751396239578329},{"x":23,"y":0.7508607221137082},{"x":24,"y":0.7547094856307438},{"x":25,"y":0.7551639598823032},{"x":26,"y":0.7536736087328411},{"x":27,"y":0.7500313876991079},{"x":28,"y":0.7530077220896964},{"x":29,"y":0.7551497656755526},{"x":30,"y":0.7549566458352706}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"9d0db5c6-9434-4e55-b96c-2ab59dc9a3d6\", :values ({:x 0, :y 0.75} {:x 1, :y 0.7533523901289974} {:x 2, :y 0.7551598868858342} {:x 3, :y 0.7548490540678546} {:x 4, :y 0.7511721234358609} {:x 5, :y 0.7510646873219909} {:x 6, :y 0.7548062344637376} {:x 7, :y 0.7551617697156543} {:x 8, :y 0.7534623766921691} {:x 9, :y 0.7500035312173666} {:x 10, :y 0.7532398382114833} {:x 11, :y 0.7551573719327201} {:x 12, :y 0.7548882563548758} {:x 13, :y 0.7512827443129481} {:x 14, :y 0.750960767464169} {:x 15, :y 0.7547597348550759} {:x 16, :y 0.7551630777232664} {:x 17, :y 0.753569507206971} {:x 18, :y 0.7500139868424425} {:x 19, :y 0.7531248442603741} {:x 20, :y 0.755154028347918} {:x 21, :y 0.7549240954774978} {:x 22, :y 0.751396239578329} {:x 23, :y 0.7508607221137082} {:x 24, :y 0.7547094856307438} {:x 25, :y 0.7551639598823032} {:x 26, :y 0.7536736087328411} {:x 27, :y 0.7500313876991079} {:x 28, :y 0.7530077220896964} {:x 29, :y 0.7551497656755526} {:x 30, :y 0.7549566458352706})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=
